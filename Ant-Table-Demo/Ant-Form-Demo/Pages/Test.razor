@page "/test"



@using System.ComponentModel.DataAnnotations;
@using System.Text.Json;



<Switch @bind-Value="@validateOnChange" CheckedChildren="ValidateOnChange" UnCheckedChildren="ValidateOnSubmit" />
<p />


<CustomForm Data="modelRules" ValidateOnChange="@validateOnChange" OnClick="(Model item)=>OnSubmit(item)">
	<BaseForm>
		<FormItem Label="Rules-UserName" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Required = true } })>
			<Input @bind-Value="@context.Username" />
		</FormItem>
		<FormItem Label="Rules-Number" Rules=@(new FormValidationRule[]{ new FormValidationRule{ Type=FormFieldType.Number, Len=100 } })>
			<Input @bind-Value="@context.Number" />
		</FormItem>
	</BaseForm>
	<BaseButton>submit</BaseButton>
</CustomForm>


@code
{
	public class Model
	{
		[StringLength(5)]
		public string Username { get; set; }
		public decimal Number { get; set; }
	}

	private Model modelDefault = new Model();
	private Model modelRules = new Model();
	private Model modelComplex = new Model();
	private bool validateOnChange = false;
	private FormValidateMode validateMode = FormValidateMode.Complex;

	private async Task OnSubmit(Model item)
	{
		Console.WriteLine($"Success:{JsonSerializer.Serialize(item)}");
	}
}